<Page
    x:Class="HeyGPT.App.Views.LetsChatPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:HeyGPT.App.Views"
    xmlns:viewModels="using:HeyGPT.App.ViewModels"
    xmlns:selectors="using:HeyGPT.App.Selectors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ui="using:CommunityToolkit.WinUI.UI"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="DefaultTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <controls:MarkdownTextBlock Text="{x:Bind Message}" Background="Transparent" CodeMargin="0, 15, 0, 15"/>
        </DataTemplate>
        <DataTemplate x:Key="LocalTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <StackPanel Orientation="Horizontal">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE77B;"/>
                <controls:MarkdownTextBlock Margin="10, 0, 0, 0" Text="{x:Bind Message}" Background="Transparent"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ErrorTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <StackPanel Orientation="Horizontal">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE783;"/>
                <RichTextBlock TextWrapping="Wrap" Margin="10, 0, 0, 0">
                    <Paragraph>
                        <Run Foreground="Red" Text="{x:Bind Message}"/>
                    </Paragraph>
                </RichTextBlock>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="PirateTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <controls:MarkdownTextBlock Text="{x:Bind Message}" FontFamily="Segoe Script"  Background="Transparent" CodeMargin="0, 15, 0, 15"/>
        </DataTemplate>

        <DataTemplate x:Key="MagicianTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <controls:MarkdownTextBlock Text="{x:Bind Message}" FontSize="18" FontFamily="Papyrus" Foreground="Gold" Background="Transparent" CodeMargin="0, 15, 0, 15"/>
        </DataTemplate>

        <DataTemplate x:Key="TightRopeWalkerTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <controls:MarkdownTextBlock Text="{x:Bind Message}" FontSize="18" FontFamily="Arial Narrow" Foreground="SkyBlue" Background="Transparent" CodeMargin="0, 15, 0, 15"/>
        </DataTemplate>

        <DataTemplate x:Key="OtherCommunityMemberTemplate" x:DataType="viewModels:ChatMessageReceivedViewModel">
            <RichTextBlock TextWrapping="Wrap">
                <Paragraph>
                    <Run Foreground="Yellow" Text="{x:Bind Message}"/>
                </Paragraph>
            </RichTextBlock>
        </DataTemplate>

        <selectors:ChatMessageTemplateSelector x:Key="ChatMessageTemplateSelector"
            DefaultTemplate="{StaticResource DefaultTemplate}"
            LocalTemplate="{StaticResource LocalTemplate}"
            ErrorTemplate="{StaticResource ErrorTemplate}"
            PirateTemplate="{StaticResource PirateTemplate}"
            MagicianTemplate="{StaticResource MagicianTemplate}"
            TightRopeWalkerTemplate="{StaticResource TightRopeWalkerTemplate}"
            OtherCommunityMemberTemplate="{StaticResource OtherCommunityMemberTemplate}"/>


        <!--PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"-->
        <Style x:Key="ListViewItemStyleNoPointerOver" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
            <Setter Property="FocusVisualPrimaryThickness" Value="2" />
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
            <Setter Property="FocusVisualSecondaryThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}" 
                     Control.IsTemplateFocusTarget="True" 
                     FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
                     FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}" 
                     FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" 
                     FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" 
                     FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" 
                     SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" 
                     CheckBrush="{ThemeResource ListViewItemCheckBrush}" 
                     CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" 
                     DragBackground="{ThemeResource ListViewItemDragBackground}" 
                     DragForeground="{ThemeResource ListViewItemDragForeground}" 
                     FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" 
                     FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" 
                     PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
                     PointerOverBackground="Transparent" 
                     PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" 
                     SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}" 
                     SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" 
                     SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}" 
                     PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" 
                     SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" 
                     DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                     DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
                     ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                     ContentMargin="{TemplateBinding Padding}" 
                     CheckMode="{ThemeResource ListViewItemCheckMode}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItemStyleChatHistory" TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyleNoPointerOver}">
            <Setter Property="Margin" Value="0,10,0,10"/>
        </Style>

        <Style x:Key="ListViewItemStyleSelected" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
            <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="IsHoldingEnabled" Value="True" />
            <Setter Property="Padding" Value="12,0,12,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="2,2,2,2"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
            <Setter Property="AllowDrop" Value="False" />
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="FocusVisualMargin" Value="0" />
            <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource ListViewItemFocusVisualPrimaryBrush}" />
            <Setter Property="FocusVisualPrimaryThickness" Value="2" />
            <Setter Property="FocusVisualSecondaryBrush" Value="{ThemeResource ListViewItemFocusVisualSecondaryBrush}" />
            <Setter Property="FocusVisualSecondaryThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}" 
             Control.IsTemplateFocusTarget="True" 
             FocusVisualMargin="{TemplateBinding FocusVisualMargin}" 
             FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}" 
             FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}" 
             FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}" 
             FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}" 
             SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}" 
             CheckBrush="{ThemeResource ListViewItemCheckBrush}" 
             CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}" 
             DragBackground="{ThemeResource ListViewItemDragBackground}" 
             DragForeground="{ThemeResource ListViewItemDragForeground}" 
             FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}" 
             FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}" 
             PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}" 
             PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
             PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}" 
             SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
             SelectedForeground="{ThemeResource ListViewItemForegroundSelected}" 
             SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
             PressedBackground="{ThemeResource ListViewItemBackgroundPressed}" 
             SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}" 
             DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
             DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" 
             ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
             ContentMargin="{TemplateBinding Padding}" 
             CheckMode="{ThemeResource ListViewItemCheckMode}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListViewItemStyleCommunityMembers" TargetType="ListViewItem" BasedOn="{StaticResource ListViewItemStyleSelected}">
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>

    </Page.Resources>


    <Grid x:Name="ContentArea">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <views:HeaderWorkspaceControl Grid.Row="0" VerticalAlignment="Top"/>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width=".25*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width=".25*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--ui:ListViewExtensions.Command="{x:Bind ViewModel.CharacterSelectedCommand}"-->

                <ListView
                x:Name="CommunityMemberListViewControl"
                MaxWidth="300"
                SelectionMode="Single"
                SelectedItem="{x:Bind ViewModel.SelectedChatCharacter, Mode=TwoWay}"
                IsItemClickEnabled="True"
                ItemsSource="{x:Bind ViewModel.ChatCharacterCollection, Mode=OneWay}"
                ItemContainerStyle="{StaticResource ListViewItemStyleCommunityMembers}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
               >
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="viewModels:ChatCharacterViewModel">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{x:Bind RoleIcon, Mode=OneWay}" VerticalAlignment="Center"
                                       Width="44" 
                                       Height="44"
                                       Stretch="Uniform"/>
                                <TextBlock Margin="15, 0, 0, 0" Text="{x:Bind RoleDisplayName, Mode=OneWay}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged" SourceObject="{Binding ElementName=CommunityMemberListViewControl}">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.CharacterSelectedCommand}"/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ListView>
                <Grid Grid.Row="1" Margin="0, 30, 0, 0" VerticalAlignment="Bottom">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBox PlaceholderText="Scratch Pad"  Height="120" Style="{StaticResource PromptTextBoxStyle}"/>

                </Grid>
            </Grid>

            <Grid Grid.Column="1" Margin="50, 10, 0, 0 " MinWidth="500" MaxWidth="900" HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="0" HorizontalAlignment="Stretch" VerticalScrollMode="Enabled" IsTabStop="True">
                    <Grid HorizontalAlignment="Center" Padding="10">
                        <ListView x:Name="MessageHistory"
                                  ItemsSource="{x:Bind ViewModel.MessageCollection, Mode=OneWay}"
                                  ItemTemplateSelector="{StaticResource ChatMessageTemplateSelector}"
                                  ItemContainerStyle="{StaticResource ListViewItemStyleChatHistory}"/>
                    </Grid>
                </ScrollViewer>

                <Grid Grid.Row="1" HorizontalAlignment="Stretch" Margin="0, 10, 0, 0 ">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*" MinWidth="300"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <ToggleButton x:Uid="Should_Include_Clipboard_Context" Grid.Column="0"
                                  Width="50" 
                                  Height="50"
                                  VerticalAlignment="Bottom"
                                  IsChecked="{x:Bind ViewModel.ShouldIncludeClipboardContext, Mode=TwoWay}"
                                  Command="{x:Bind ViewModel.ToggleShouldIncludeClipboardContextCommand, Mode=OneWay}">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE77F;"/>
                    </ToggleButton>
                    <TextBox x:Uid="Chat_Prompt_Text_Box"
                             Grid.Column="1"
                             Margin="5, 0, 0, 0"
                             MaxHeight="120"
                             Style="{StaticResource PromptTextBoxStyle}"
                             PlaceholderText="{x:Bind ViewModel.MessagePlaceholder, Mode=OneWay}"
                             Text="{x:Bind ViewModel.UserMessage, Mode=TwoWay}"/>
                    <Button Grid.Column="2" 
                            Margin="5, 0, 0, 0"
                            Width="35" Height="50"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource SimpleGlyphButtonStyle}"
                            Content="&#xE110;"
                            Command="{x:Bind ViewModel.SendMessageCommand, Mode=OneWay}"/>
                </Grid>
            </Grid>

        </Grid>

        <views:FooterWorkspaceControl Grid.Row="2" Margin="0, 10, 0, 0" VerticalAlignment="Bottom"/>
    </Grid>
</Page>
